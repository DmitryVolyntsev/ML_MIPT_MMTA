El código es el próximo lenguaje universal. En los 70, fue la música punk que condujo a toda una generación. En los años 80, fue probablemente el dinero. Pero para mi generación, el software es la interfaz a la imaginación y al mundo. Y eso significa que necesitamos un grupo de personas diametralmente más diverso para construir esos productos, para no ver las computadoras como algo mecánico, solitario, aburrido, mágico, para verlas como algo con lo que poder jugar, que se puede manipular, girar, etc.
Mi viaje personal hacia el mundo de la programación y la tecnología empezó a la temprana edad de 14 años. Tuve un alocado amor adolescente por un hombre mayor, ese hombre mayor en cuestión resultó ser el vicepresidente de EE.UU., el Sr. Al Gore. E hice lo que toda adolescente quisiera hacer. Quería en cierto modo expresar todo este amor, así que le hice un sitio web, está por aquí. En 2001, no había Tumblr, no había Facebook, no había Pinterest. Por eso tuve que aprender a programar para expresar esas ansias y ese amor.
Así empecé a programar. Primero como medio de autoexpresión. De la misma forma que de pequeña usaba crayones y legos. De más mayor, usaba clases de guitarra y obras de teatro. Pero luego, me apasioné por otras cosas, como la poesía, el tejido de calcetines, la conjugación de verbos irregulares en francés, la invención de mundos imaginarios, Bertrand Russell y su filosofía. Y empecé a ser de esas personas que sentían que las computadoras eran aburridas, técnicas y solitarias.
Hoy pienso de esta manera: Las niñitas no saben que no deberían gustarles las computadoras. Las niñitas son increíbles. Son muy, muy buenas para concentrarse en cosas, ser exactas y hacerse preguntas increíbles como: "¿Qué?", "¿Por qué?", "¿Cómo? y "¿Qué tal si?" Y no saben que se supone que no deberían gustarles las computadoras. Son los padres quienes lo piensan. Los padres sí sentimos que la informática es una disciplina esotérica, una ciencia extraña, que solo pertenece a hacedores misteriosos; que está tan disociada de la vida cotidiana como, digamos, la física nuclear.
Y eso tiene parte de razón. Hay mucha sintaxis, controles, estructuras de datos, algoritmos, prácticas, protocolos y paradigmas en la programación. Y, como comunidad, hicimos computadoras cada vez más pequeñas. Construimos capas y capas de abstracción unas sobre otras entre el humano y la máquina hasta el punto de no tener idea de cómo funcionan las computadoras, o cómo hablarles. Y enseñamos a nuestros niños cómo funciona el cuerpo humano, les enseñamos cómo funcionan los motores de combustión e incluso les decimos que si realmente quieren ser astronautas pueden llegar a serlo. Pero cuando el niño viene y pregunta: "¿Qué es un algoritmo de ordenamiento de burbuja?" ¿Cómo sabe la computadora qué sucede cuando presiono "reproducir"? ¿Cómo sabe qué video mostrar? Linda, ¿Internet es un lugar?" Los adultos nos quedamos en un silencio extraño. "Es magia", dicen unos. "Es muy complicado", dicen otros.
Bueno, ninguna de las dos. No es magia ni es complicado. Sencillamente ocurre muy, muy, muy rápido. Los informáticos construyen hermosas máquinas increíbles, pero las hacen tan, tan ajenas a nosotros, y también al lenguaje con el que hablamos con las computadoras que ya no sabemos cómo hablar a las máquinas sin nuestras interfaces elaboradas.
Y por eso nadie reconocía que cuando yo conjugaba verbos irregulares en francés, en realidad practicaba reconocimiento de patrones. Y cuando me apasionaba tejiendo, en realidad seguía una secuencia de comandos simbólicos que tenía bucles. Y que la eterna búsqueda de Bertrand Russell por encontrar un lenguaje exacto entre el inglés y las matemáticas encontró su lugar dentro de la computadora. Yo era programadora, pero nadie lo sabía.
Los niños de hoy tocan, deslizan, y pulsan su camino hacia el mundo. Pero si no les damos herramientas para construir con computadoras, solo creamos consumidores en vez de creadores.
Toda esta búsqueda me llevó a esta niña. Su nombre es Ruby, tiene seis años. No tiene miedo, tiene imaginación, y es un poco mandona. Y cada vez que encontraba un problema como autodidacta de la programación, preguntaba: "¿Qué es el diseño orientado a objetos o qué es la recolección de residuos?" Trataba de imaginar cómo explicaría el problema una niña de seis años.
Y escribí un libro sobre ella y lo ilustré y Ruby me enseñó estas cosas. Me enseñó que no se debe tener miedo a los "bugs" bajo la cama. Y que hasta el mayor de los problemas es un grupo de pequeños problemas apilados. Y Ruby me presentó a sus amigas, el lado colorido de la cultura de Internet. Ella tiene amigos como el leopardo de las nieves, que es hermoso, pero no quiere jugar con otros niños. Tiene amigos como los robots verdes muy amigables, pero súper desordenados. Y tiene amigos como Linux el pingüino implacablemente eficiente, pero un poco difícil de entender. Y zorros idealistas, etc.
En el mundo de Ruby, uno aprende tecnología mediante el juego. Y, por ejemplo, las computadoras son muy buenas para repetir cosas, entonces Ruby enseña bucles así. El paso de baile favorito de Ruby, es: "Palma, palma, pisa, pisa, palma, palma y salto". Y uno aprende bucles "contadores" repitiendo eso cuatro veces. Y aprende bucles de tipo "mientras" repitiendo esa secuencia mientras me paro en un pie. Y aprende bucles de tipo "hasta" repitiendo esa secuencia hasta que mamá se enoje. (Risas) Y, sobre todo, se aprende que no hay respuestas inmediatas.
Cuando ideaba el plan del mundo de Ruby, precisaba preguntarle a los niños cómo ven el mundo y qué tipo de preguntas tienen, y organizaba sesiones lúdicas experimentales. Empezaba mostrando a los niños estas cuatro imágenes. Les mostraba la imagen de un auto, una tienda de comestibles, un perro y un sanitario. Y preguntaba: "¿Cuál piensas que es una computadora?" Los niños eran muy conservadores y decían: "Ninguna es una computadora. Yo sé lo que es una computadora: es esa caja brillante con la que papá y mamá pasan mucho tiempo". Pero luego hablábamos y descubríamos que en realidad un auto es una computadora, pues tiene un sistema de navegación. Y un perro no puede ser una computadora, pero tiene un collar y el collar puede tener una computadora dentro. Y la tienda de comestibles tiene muchos tipos de computadoras, como el sistema del cajero y las alarmas antirrobo. Y los niños, ¿saben qué? En Japón, los sanitarios son computadoras e incluso son atacados por "hackers". (Risas)
Vamos más lejos y les doy uno de esos adhesivos que tienen botones encendido/apagado. Y le dije a los niños: "Hoy tienen el poder mágico para transformar cualquier cosa en una computadora". Y, nuevamente, los niños decían: "Parece difícil, no sé la respuesta correcta". Pero les digo: "No se preocupen, sus padres tampoco conocen la respuesta correcta. Apenas conocen algo llamado Internet de las Cosas. Pero Uds. niños, serán quienes vivirán realmente en un mundo en el que todo será una computadora".
Y luego se me acercó una niñita, tomó la lámpara de una bici y dijo: "Si esta lámpara fuera una computadora, cambiaría de colores". Y yo dije: "Es una idea muy buena, ¿qué otra cosa podría hacer?" Ella piensa y piensa, y dice: "Si esta lámpara de bicicleta fuera una computadora, podríamos hacer un viaje en bicicleta con papá, dormiríamos en una tienda, y esta lámpara de bicicleta también podría ser un proyector de películas". Y busco ese momento, en que el niño se da cuenta de que el mundo definitivamente no es algo terminado, que una manera increíble de completarlo es creando tecnología y que cada uno de nosotros puede ser parte de ese cambio.
Última historia, también construimos una computadora. Conocimos a la CPU mandona y a las útiles memorias RAM y ROM que ayudan a recordar cosas. Después de montar la computadora, también diseñamos una aplicación. Y mi historia favorita es la de este niñito, tiene seis años y su cosa favorita en el mundo es ser astronauta. El niño tiene esos auriculares enormes y está completamente inmerso en su pequeña computadora de papel porque vean, construyó su propia aplicación de navegación planetaria intergaláctica. Y su padre, el astronauta solitario en la órbita marciana, está al otro lado de la sala y la misión importante del niño consiste en traer a su padre a salvo de vuelta a la Tierra. Estos niños tendrán una visión profundamente diferente del mundo y de la manera de construirlo con tecnología.
Por último, cuanto más accesible, más inclusivo, y diverso hagamos el mundo de la tecnología, mejor y más colorido será el mundo. Por eso, imaginemos juntos, por un momento, un mundo en el que las historias que contamos sobre cómo se hacen las cosas no solo convoquen a veinteañeros de Silicon Valley, sino también a colegialas kenianas y a bibliotecarios noruegos. Imaginen un mundo en el que la pequeña Ada Lovelaces del mañana, que viven en una realidad permanente de unos y ceros, crezcan optimistas y valientes respecto de la tecnología. Ellas aceptan los poderes, las oportunidades y las limitaciones del mundo. Un mundo de tecnologías encantadoras, extravagantes, y un poquito extrañas.
De niña, quería ser narradora. Me encantaban los mundos imaginarios; mi situación favorita era despertar por la mañana en Moominvalley, vagar por la tarde en Tatooines e ir a dormir por la noche a Narnia. La programación terminó siendo mi profesión ideal. Todavía creo mundos. En vez de historias, los hago con código.
La programación me da ese poder increíble para construir mi pequeño universo con sus propias reglas, paradigmas y prácticas. Para crear algo de la nada con el poder puro de la lógica.
Gracias.
(Aplausos)
TED.com translations are made possible by volunteer translators. Learn more about the Open Translation Project.
© TED Conferences, LLC. All rights reserved.