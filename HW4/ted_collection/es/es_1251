Chris Anderson: Es una cosa tan curiosa. Tu software, Linux, está en millones de computadoras, probablemente soporta gran parte de Internet. Y creo que hay, como, 1500 millones de dispositivos Android activos por ahí. Tu software está en todos y cada uno de ellos. Es un poco sorprendente. Debes tener una sorprendente sede de software dirigiendo todo esto. Es lo que pensé, y quedé muy sorprendido cuando vi una foto de ello. Es decir, es esto... esta es la sede mundial de Linux. (Risas) (Aplausos) Linus Torvalds: Realmente no lo parece mucho. Y tengo que decir, la parte más interesante en esta imagen, a lo que las personas reaccionan, es al escritorio de pie. Es la parte más interesante en mi oficina y no estoy realmente usándola más. Creo que las dos cosas están relacionadas. Mi forma de trabajar es... No quiero tener estimulación externa. Pueden ver más o menos, las paredes son de color verde claro. Me han dicho que en las instituciones mentales que utilizan las mismas paredes. (Risas) Es como un color calmante, no es algo que realmente te estimula. Lo que no pueden ver es el equipo, solo se ve la pantalla, pero lo más me preocupa de mi equipo es... no tiene que ser grande y poderoso, aunque me gusta que... lo que realmente tiene que ser es completamente silencioso. Conozco personas que trabajan para Google y tienen su propio pequeño centro de datos en casa, y yo no hago eso. Mi oficina es la oficina más aburrida que jamás puedan ver. Y me siento allí solo en silencio. Si el gato se acerca, se sienta en mi regazo. Y quiero oír el ronroneo del gato, no el sonido de los ventiladores del equipo. CA: Es sorprendente, porque trabajando de esta manera, has sido capaz de llevar este vasto imperio de tecnología —es un imperio— así que eso es un testamento increíble a la potencia del código abierto. Cuéntanos cómo has llegado a entender el código abierto y cómo lleva al desarrollo de Linux. LT: Sigo trabajando solo. Realmente... trabajo solo en mi casa, a menudo en mi albornoz. Cuando un fotógrafo aparece, me visto, tengo la ropa puesta. (Risas) Así es como siempre he trabajado. Así fue como empecé Linux, también. No empecé Linux como un proyecto de colaboración. Empecé como parte de una serie de muchos proyectos que había hecho en el tiempo para mí, en parte porque necesitaba el resultado final, pero aún más porque disfrutaba la programación. Por lo tanto, era sobre el final del viaje, el cual, 25 años después, todavía no hemos alcanzado. Pero fue realmente sobre el hecho de que estaba buscando un proyecto por mi cuenta y no había ninguna fuente abierta, en realidad, en mi radar en absoluto. Y lo que pasó es... el proyecto crece y se convierte en algo que uno desea mostrar a la gente. Realmente, esto es más de un, "¡Mira lo que hice!". Y, créanme... no era tan bueno en ese entonces. Lo hice públicamente disponible, y ni siquiera era código abierto entonces. En ese momento era fuente que estaba abierta, pero no había ninguna intención detrás de usar el tipo de metodología de código abierto que pensamos hoy para mejorarlo. Era más como, "Mira, he estado trabajando en esto durante medio año, me gustaría tener comentarios". Y otras personas se acercaron a mí. En la Universidad de Helsinki, tenía un amigo que era uno de los de código abierto —se le llamó "software libre", principalmente en aquel entonces— y de hecho me introdujo a la idea de que, bueno, puedes utilizar estas licencias de código abierto que han existido. Y pensé en ello durante un tiempo. En realidad, estaba preocupado sobre el interés comercial que llegaba. Es una de preocupación, que creo que tiene la mayoría de los que comienzan, es que les preocupa que alguien se aproveche de su trabajo, ¿verdad? Yo decidí, "¿Qué demonios?". y... CA: Y después, en algún momento, alguien aportó un código que pensaste, "Esto es realmente interesante, yo no habría pensado en eso. En realidad, podría mejorar esto". LT: Ni siquiera comenzó con gente contribuyendo con código, era más aportando ideas. Y el solo hecho de que alguien eche un vistazo a tu proyecto —y estoy seguro de que es cierto para otras cosas, también, pero sin duda es cierto en código— es que alguien se interese en tu código, mire lo suficiente como para realmente darte retroalimentación y darte ideas. Eso fue algo muy importante para mí. Tenía 21 años en ese momento, así que era joven, pero ya había programado para la mitad de mi vida, básicamente. Y cada proyecto anterior había sido completamente personal y fue una revelación cuando la gente empezó a comentarlo, comenzó a dar retroalimentación sobre tu código. E incluso antes de comenzar a dar vuelta código, que fue, creo, uno de los grandes momentos en los que he dicho, "¡Me encanta la gente!". No me malinterpreten... en realidad, no tengo don de gentes. (Risas) Realmente no me gusta la gente... (Risas) Pero me encantan los computadores, me encanta interactuar con otros por mail, debido a que esto te da ese búfer. Pero me gusta que otras personas comenten y participen en mi proyecto. Y se hizo mucho más. CA: Así que ¿hubo un momento en que viste lo que se estaba construyendo y de repente empezó a despegar, y pensaste, "Espera un segundo, en realidad, esto podría ser algo enorme, no solo un proyecto personal que recibe buena retroalimentación, sino una especie de desarrollo explosivo en todo el mundo de la tecnología"? LT: En realidad no. Es decir, el punto para mí, realmente, no fue cuando se estaba convirtiendo enorme, fue cuando se estaba convirtiendo en algo. El punto grande para mí fue que no estaba solo y que tenía 10, tal vez 100 personas involucradas... eso fue un gran punto. A continuación, todo lo demás fue muy gradual. Pasar de 100 personas a un millón de personas no es una gran cosa... para mí. Bueno, quiero decir, tal vez es si estás... (Risas) Si se quiere vender su resultado entonces es algo grande, no me malinterpreten. Pero si se está interesado en la tecnología y se está interesado en el proyecto, la parte grande estaba en formar comunidad. Después la comunidad creció gradualmente. Y no hay en realidad un único punto en el que fui como, "Uf, ¡acaba de despegar!", porque, quiero decir, tomó mucho tiempo, relativamente. CA: Todos los técnicos con los que hablo en realidad te dan crédito del masivo cambio en la forma de su trabajo. Y no se trata solo de Linux, es esta cosa llamada Git, que es este sistema de gestión para el desarrollo de software. Cuéntanos brevemente sobre eso y tu papel en eso. LT: Uno de los temas que tuvimos, y esto tomó un tiempo para empezar a aparecer, es cuando uno... Cuando creces de tener 10 personas o 100 personas trabajando en un proyecto a tener 10 000 personas, lo que... es decir, en este momento estamos en la situación en la que solo en el núcleo, tenemos 1000 personas que participan en cada lanzamiento y eso es cada dos meses, más o menos dos o tres meses. Algunas de esas personas no hacen mucho. Hay muchas personas que hacen pequeños cambios. Pero para mantener esto, la escala cambia la forma en que hay que mantenerla. Y el proceso lo hicimos muy doloroso. Y hay proyectos completos que hacen solo mantenimiento del código fuente. CVS es el que solía ser el más utilizado, y yo odiaba CVS con pasión y rehusaba tocarlo e intentaba otra cosa que era radical e interesante y todo el mundo la odiaba. CA: (Risas) LT: Y estábamos en este mal lugar, en que teníamos miles de personas que querían participar, pero en muchos aspectos, yo era el punto de ruptura, donde no podía escalar hasta el punto en el que podía trabajar con miles de personas. Así que Git es mi segundo gran proyecto, que solo fue creado para mí, para mantener mi primer gran proyecto. Y así es literalmente cómo trabajo. Yo no codifico para —bueno, hago código por diversión— pero quiero codificar para algo significativo por lo que cada uno de los proyectos que he hecho ha sido algo que necesitaba y... CA: Así que, en realidad, tanto en Linux como Git surgió de algo así casi como una consecuencia no deseada de tu deseo de no tener que trabajar con mucha gente. LT: Totalmente. Sí. (Risas) CA: Eso es increíble. LT: Sí. (Aplausos) Y, sin embargo, eres el hombre que ha transformado la tecnología no solo una sino dos veces, y tenemos que tratar de entender por qué es así Nos has dado algunas pistas, pero ... Aquí hay una foto tuya de niño, con un cubo de Rubik. Has dicho que has estado programando desde que eran como 10 u 11, la mitad de tu vida. ¿Eras ese tipo de genio de la informática, ya sabes, súper nerdo, eras la estrella en la escuela que podría hacer todo? ¿Cómo eras cuando eras niño? LT: Sí, creo que yo era el nerdo prototípico. Quiero decir, yo era... Yo no era una persona sociable entonces. Ese es mi hermano menor. Yo estaba claramente más interesado en el cubo de Rubik que mi hermano menor. (Risas) Mi hermana menor, que no está en la imagen, cuando teníamos reuniones familiares —y no es una gran familia, pero tengo, como, un par de primos— ella me preparaba de antemano. Como, antes de que yo entrara en la habitación diría, "Bien. Esto y lo otro..." Porque yo no estaba... yo era un friki. Yo estaba en computadoras, Estaba en matemáticas, Yo estaba en la física. Yo era bueno en eso. No creo que fuera particularmente excepcional. Al parecer, dijo mi hermana que mi mayor cualidad excepcional era que no abandonaba. CA: Bien, profundicemos, porque eso es interesante. Tú no abandonas. No se trata de ser un geek y ser inteligente, que trata de ser... ¿terco? LT: Eso es ser terco. Eso es, al igual que, acabar de empezar algo y no decir: "Está bien, hecho, vamos a hacer algo más... Mira: ¡brillante!". Y lo noto que en muchas otras partes de mi vida, también. He vivido en Silicon Valley durante siete años. Y trabajé para la misma empresa, en Silicon Valley, durante todo el tiempo. Eso es inaudito. Así no funciona Silicon Valley. El punto de Silicon Valley es que la gente salta entre puestos de trabajo como mezclar todo. Y ese no es el tipo de persona que soy. CA: Pero durante el desarrollo de Linux en sí mismo, esa terquedad te trajo conflictos con otras personas. Habla de eso un poco. ¿Era esencial para mantener la especie de calidad de lo que estabas construyendo? ¿Cómo describirías lo que pasó? LT: No sé si es esencial. Volviendo a lo de "No soy una persona sociable", —a veces también soy— podríamos decir, "miope" cuando se trata de los sentimientos de otras personas, y que a veces te hace decir cosas que perjudican a otras personas. Y no estoy orgulloso de ello. (Aplausos) Pero, al mismo tiempo, es... Hay gente que me dice que debería ser agradable. Y luego cuando trato de explicarles que tal vez usted es agradable, tal vez debería ser más agresivo, ven que como yo no soy agradable. (Risas) Trato de decir que somos diferentes. No soy una persona sociable; no es algo de lo que estoy particularmente orgulloso, pero es parte de mí. Y una de las cosas que me gusta del código abierto es que realmente permite que diferentes personas trabajen juntas. No tenemos que agradarnos, y, a veces, realmente no nos agradamos. Realmente... quiero decir, hay discusiones muy, muy calientes. Pero se puede, de hecho, se pueden encontrar cosas que... uno ni siquiera está de acuerdo en estar en desacuerdo, es solo que le interesan realmente diferentes cosas. Y volviendo al punto en el que he dicho anteriormente que temía a las personas comerciales que se aprovechan de tu trabajo, se vio después, y muy pronto resultó que, aquellas personas comerciales eran gente encantadora, de verdad. E hicieron todas las cosas que yo no estaba en absoluto interesado en hacer, y tenían objetivos muy diferentes. Y utilizaron el código abierto de una manera que yo no quería. Pero debido a que era código abierto que podían hacer, y que en realidad funcionan muy bien juntos. De hecho, creo que funciona de la misma forma. Es necesario tener las personas-personas, los comunicadores, la gente cálida y amigable a quien le gusta... (Risas) realmente quieren abrazarlo y traerlo a la comunidad. Pero así no es todo el mundo. Y ese no soy yo. Me importa la tecnología. Hay quienes se preocupan por la interfaz de usuario. No puedo hacer la interfaz de usuario para salvar mi vida. Es decir, si yo estuviera varado en una isla y la única manera de salir de esa isla fuera una buena interfaz de usuario, me moriría allí. (Risas) Así que hay diferentes tipos de personas, y no estoy dando excusas, estoy tratando de explicar. CA: Cuando hablamos la semana pasada, hablaste de algún otro rasgo que tienes, que me pareció muy interesante. Es esta idea llamada gusto. Solo tengo un par de imágenes aquí. Creo que esto es un ejemplo de un no particular buen gusto en el código, y este sabe mejor, la cual se puede ver inmediatamente. ¿Cuál es la diferencia entre estos dos? LT: Esto es... ¿Cuántas personas aquí realmente han codificado? CA: Oh mi Dios. LT: Les garantizo, a todos los que levantaron su mano, que han hecho lo que se llama una lista enlazada. Y se enseña... Este, el primero no es una muy buena aproximación de gusto, es básicamente cómo se enseña a hacer cuando se empieza la codificación. Y uno no tiene que entender el código. La parte más interesante para mí es la última sentencia "if" (si). Debido a que lo que pasa en una lista enlazada —esto está tratando de quitar una entrada existente de una lista— y hay una diferencia entre si es la primera entrada o si se trata de una entrada en el centro. Porque si es la primera entrada, uno tiene que cambiar el puntero a la primera entrada. Si está en el medio, uno tiene que cambiar el puntero de una entrada anterior. Son dos casos completamente diferentes. CA: Y ese es mejor. LT: Y este es mejor. No tiene la sentencia "if". Y realmente no importa... No quiero que entiendan por qué no tiene la sentencia "if", pero quiero que entiendan que a veces se puede ver un problema de forma diferente y volver a escribir para que un caso especial desaparezca y se convierta en el caso normal. Y eso es un buen código. Pero esto es simple código. Esto es CS 101. Esto no es importante... si bien, los detalles son importantes. Para mí, el signo de la gente que realmente quiere trabajar con esto es que tienen buen gusto, que es como... Te envié este estúpido ejemplo que no es relevante, porque es muy pequeño. El buen gusto es mucho más grande que esto. El buen gusto es ve realmente los grandes patrones y el tipo de saber instintivamente cuál es la forma correcta de hacer las cosas. CA: OK, así que estamos juntando las piezas aquí ahora. Tú tienes gusto, de una manera que es significativa para la gente de software. Eres... (Risas) LT: Creo que fue significativo para algunos aquí. CA: Eres un programador informático muy inteligente, y eres un terco infernal. Pero tiene que haber algo más. Es decir, has cambiado el futuro. Debes tener la capacidad de estas grandes visiones del futuro. Eres un visionario, ¿verdad? LT: Me he sentido un poco incómodo en TED durante los últimos dos días, porque hay una gran cantidad de visión dándose, ¿verdad? Y no soy un visionario. No tengo un plan a cinco años. Soy ingeniero. Y creo que es realmente... Quiero decir... Estoy muy feliz con todas las personas que andan por ahí y solo miran a las nubes y miran las estrellas y dicen, "quiero ir allá". Pero estoy mirando al suelo, y quiero arreglar el bache que está justo en frente de mí antes de que caiga en él Este es el tipo de persona que soy. (Aclamaciones) (Aplausos) CA: Hablaste la semana pasada sobre estos dos chicos. ¿Quiénes son y cómo te relacionas con ellos? LT: Bueno, es una especie de lugar común en la tecnología, todo el Tesla contra Edison, donde Tesla es visto como el visionario científico y el hombre de la idea loca. Y a la gente le encanta Tesla. Es decir, hay personas que nombran sus empresas por él. (Risas) La otra persona hay es Edison, que en realidad es a menudo vilipendiado por ser especie de peatón y es... Es decir, su cita más famosa es, "El genio es un 1 % de inspiración y 99 % de transpiración". Y estoy en el campo de Edison, incluso si a la gente no siempre le gusta. Porque si en realidad se comparan los dos, Tesla tiene esa clase de mente que atrapa en estos días, pero ¿realmente cambió el mundo? Edison pudo no haber sido una buena persona, que hizo un montón de cosas... él no era quizá tan intelectual, no era tan visionario. Pero creo que soy más un Edison que un Tesla. CA: Nuestro tema en TED esta semana son los sueños, grandes, audaces sueños. Eres realmente el antídoto para eso. LT: Trato de apuntar hacia abajo un poco, sí. CA: Eso es bueno. (Risas) Los abrazamos, los abrazamos. Empresas como Google y muchas otras han hecho, podría decirse, miles de millones de dólares con tu software. ¿No te molesta? LT: No. No, no me molesta por varias razones. Y una es, que los estoy haciéndolo bien. Realmente estoy haciéndolo bien. Pero la otra razón es... Es decir, sin hacer todo el código abierto y realmente dejarlo ir, Linux nunca habría sido lo que es. Y ha traído experiencias que realmente no disfruto, hacerlas públicas, pero al mismo tiempo, es una experiencia. Créeme. Así que hay un montón de cosas que pasan que me hacen un hombre muy feliz y pensando que tomé las decisiones correctas. CA: ¿Está la idea de código abierto —creo que terminamos aquí— está la idea del código abierto completamente realizada ahora en el mundo, o hay algo más que se podría hacer, hay más cosas que se podrían hacer? LT: Tengo dos pensamientos. Creo que una de las razones por las que el código abierto funciona tan bien es que al final del día, el código tiende a ser algo blanco y negro. Hay a menudo una forma bastante buena de decidir, esto está hecho correctamente, y esto no está bien hecho. El código funciona o no, lo que significa que hay menos espacio para las discusiones. Y tenemos discusiones a pesar de esto, ¿verdad? En muchas otras áreas... quiero decir, la gente ha hablado de la política abierta y cosas por el estilo y es muy difícil a veces decir sí, pueden aplicar los mismos principios en algunas otras áreas solo porque lo blanco y negro se torna en no solo gris, sino en diferentes colores. Así que, obviamente, la fuente abierta en la ciencia está reapareciendo. La ciencia estaba allí primero. Pero después la ciencia terminó siendo bastante cerrada, con revistas muy caras y algunos de los que pasa. Y de código abierto está haciendo una reaparición en la ciencia, con cosas como arXiv y revistas abiertas. Wikipedia cambió el mundo, también. Hay otros ejemplos, Estoy seguro de que hay más por venir. CA: Pero no eres un visionario, y no depende de ti nombrarlos. LT: No. (Risas) Todo depende de Uds. hacerlo, ¿verdad? CA: Exactamente. Linus Torvalds, gracias por Linux, gracias a Internet, gracias por todos los teléfonos Android. Gracias por venir aquí a TED y revelarnos tanto de ti. LT: Gracias. (Aplausos)
TED.com translations are made possible by volunteer translators. Learn more about the Open Translation Project.
© TED Conferences, LLC. All rights reserved.